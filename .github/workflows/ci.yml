---
name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y grcov
      - name: Build
        run: cargo build --verbose
      - name: Run tests with coverage
        run: cargo test --verbose
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: -C instrument-coverage -Ccodegen-units=1 -Cinline-threshold=0
            -Clink-dead-code -Coverflow-checks=off -Cpanic=abort
          RUSTDOCFLAGS: -C instrument-coverage -Ccodegen-units=1 -Cinline-threshold=0
            -Clink-dead-code -Coverflow-checks=off -Cpanic=abort
      - name: Generate coverage report
        run: |
          grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info
      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ./lcov.info
          verbose: true
          fail_ci_if_error: true
